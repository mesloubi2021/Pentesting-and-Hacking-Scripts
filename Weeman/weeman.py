import sys
import argparse

SUPPORTED_PYTHON_VERSIONS = ["2.7", "3"]

class Weeman:
    def __init__(self):
        self.parse_arguments()
        self.tests_pyver()
        self.tests_platform()
    
    def parse_arguments(self):
        parser = argparse.ArgumentParser(description="Weeman Tool")
        parser.add_argument("-q", "--quiet", dest="quiet_mode", action="store_true", help="Run without displaying the banner.")
        parser.add_argument("-p", "--profile", dest="profile", help="Load Weeman profile.")
        self.args = parser.parse_args()
    
    def tests_pyver(self):
        if sys.version[:3] not in SUPPORTED_PYTHON_VERSIONS:
            print("Weeman does not support your Python version.")
            sys.exit(1)
    
    def tests_platform(self):
        supported_platforms = ["linux", "darwin"]
        if any(platform in sys.platform for platform in supported_platforms):
            if "win" in sys.platform:
                print("Sorry, there is no support for Windows right now.")
                sys.exit(1)
        else:
            print("Weeman might not work optimally on your platform (%s)." % sys.platform)
    
    def run(self):
        if self.args.profile:
            from core.shell import shell_noint
            shell_noint(self.args.profile)
        else:
            from core.shell import shell
            shell()

if __name__ == '__main__':
    weeman_tool = Weeman()
    weeman_tool.run()