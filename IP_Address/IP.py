import requests
from tkinter import *
from tkinter import messagebox
import public_ip as ip


def check(ip):
    url = f"https://ipapi.co/{ip}/json/"
    try:
        response = requests.get(url).json()
        data_labels = [
            ("region", "Region"),
            ("ip", "IP Address"),
            ("region_code", "Region Code"),
            ("country_code", "Country Code"),
            ("country_code_iso3", "Country Code ISO3"),
            ("country_name", "Country Name"),
            ("country_capital", "Country Capital"),
            ("country_tld", "Country TLD"),
            ("continent_code", "Continent Code"),
            ("in_eu", "In EU"),
            ("postal", "Postal"),
            ("latitude", "Latitude"),
            ("longitude", "Longitude"),
            ("timezone", "Timezone"),
            ("utc_offset", "UTC Offset"),
            ("country_calling_code", "Country Calling Code"),
            ("currency", "Currency"),
            ("languages", "Languages"),
            ("asn", "ASN"),
            ("org", "ORG"),
        ]

        for index, (key, label) in enumerate(data_labels):
            lbl_value = globals()["lbl_" + key + "_value"]
            lbl_value.config(text=response.get(key, ""))
    except:
        messagebox.showerror("Error", "Invalid IP Address")


root = Tk()
root.title("IP Address")
root.geometry("510x800")
root.configure(bg="black")

ip_address = ip.get()

ip_intro = Label(
    root, text="Your IP Address Is ", font=("Arial", 25), bg="black", fg="white"
)
ip_intro.place(x=110, y=10)

ip_addr = Label(root, text=ip_address, font=("Arial", 20), bg="black", fg="Yellow")
ip_addr.place(x=150, y=60)

ip_entry = Entry(
    root,
    width=22,
    font=("Arial", 20),
    bg="black",
    fg="white",
    bd=2,
    justify="center",
    selectbackground="red",
)
ip_entry.place(x=50, y=120)

search_btn = Button(
    root,
    text="Search",
    font=("Arial", 15),
    bg="red",
    fg="white",
    bd=2,
    command=lambda: check(ip_entry.get()),
)
search_btn.place(x=400, y=120)

data_labels = [
    ("ip", "IP Address"),
    ("region", "Region"),
    ("region_code", "Region Code"),
    ("country_code", "Country Code"),
    ("country_code_iso3", "Country Code ISO3"),
    ("country_name", "Country Name"),
    ("country_capital", "Country Capital"),
    ("country_tld", "Country TLD"),
    ("continent_code", "Continent Code"),
    ("in_eu", "In EU"),
    ("postal", "Postal"),
    ("latitude", "Latitude"),
    ("longitude", "Longitude"),
    ("timezone", "Timezone"),
    ("utc_offset", "UTC Offset"),
    ("country_calling_code", "Country Calling Code"),
    ("currency", "Currency"),
    ("languages", "Languages"),
    ("asn", "ASN"),
    ("org", "ORG"),
]

row = 200
for index, (key, label) in enumerate(data_labels):
    lbl_text = Label(root, text=label + ":", font=("Arial", 15), bg="black", fg="white")
    lbl_text.place(x=50, y=row)

    lbl_value = Label(root, text="", font=("Arial", 15), bg="black", fg="yellow")
    lbl_value.place(x=250, y=row)
    globals()["lbl_" + key + "_value"] = lbl_value

    row += 30

root.mainloop()
