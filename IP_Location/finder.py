import os
import sys
import time
import platform
import random
from ipapi import location
from colorama import init, Style, Fore, Back

# Initialize colorama to work on Windows
init()

GB = Back.GREEN
YB = Back.YELLOW
WB = Back.RED

all_col = [
    Style.BRIGHT + Fore.RED,
    Style.BRIGHT + Fore.CYAN,
    Style.BRIGHT + Fore.LIGHTCYAN_EX,
    Style.BRIGHT + Fore.LIGHTBLUE_EX,
    Style.BRIGHT + Fore.LIGHTCYAN_EX,
    Style.BRIGHT + Fore.LIGHTMAGENTA_EX,
    Style.BRIGHT + Fore.LIGHTYELLOW_EX,
]

all_DARKCOLORS = [
    Style.BRIGHT + Fore.CYAN,
    Style.BRIGHT + Fore.GREEN,
    Style.BRIGHT + Fore.RED,
    Style.BRIGHT + Fore.YELLOW,
    Style.BRIGHT + Fore.BLUE,
    Style.BRIGHT + Fore.WHITE,
]

ran = random.choice(all_DARKCOLORS)
ran2 = random.choice(all_col)

lg = Style.BRIGHT + Fore.LIGHTGREEN_EX
g = Style.BRIGHT + Fore.GREEN
lc = Style.BRIGHT + Fore.LIGHTCYAN_EX
c = Style.BRIGHT + Fore.CYAN
ly = Style.BRIGHT + Fore.LIGHTYELLOW_EX
y = Style.BRIGHT + Fore.YELLOW
r = Style.BRIGHT + Fore.RED
lr = Style.BRIGHT + Fore.LIGHTRED_EX
b = Style.BRIGHT + Fore.BLUE
w = Style.BRIGHT + Fore.LIGHTWHITE_EX

logo = f"""

  ██████╗ ███████╗ ██████╗ ██████╗ ███████╗
 ██╔════╝ ██╔════╝██╔════╝██╔═══██╗██╔════╝
 ██║  ███╗█████╗  ██║     ██║   ██║███████╗
 ██║   ██║██╔══╝  ██║     ██║   ██║╚════██║
 ╚██████╔╝███████╗╚██████╗╚██████╔╝███████║
  ╚═════╝ ╚══════╝ ╚═════╝ ╚═════╝ ╚══════╝
                                                                                          
"""


class Terminal:
    def __init__(self):
        self.clear_command = "cls" if platform.system() == "Windows" else "clear"

    def clear_screen(self):
        os.system(self.clear_command)

    def print_colored(self, text, color):
        print(color + text + Style.RESET_ALL)

    def print_banner(self, logo):
        self.print_colored(logo, ran)

    def prompt_input(self, prompt):
        return input(c.ran + prompt + c.ran)

    def delay_print(self, text, delay=0.03):
        for char in text:
            sys.stdout.write(char)
            sys.stdout.flush()
            time.sleep(delay)

    def execute_command(self, command):
        os.system(command)

    def get_location_info(self, ip):
        return location(ip)

    def run_program(self):
        self.clear_screen()
        self.print_banner(logo)

        while True:
            ip = self.prompt_input(c.ran + "Enter target IP: " + c.ran)
            location_info = self.get_location_info(ip)

            for k, v in location_info.items():
                print(c.c + k + " : " + c.lr + str(v))

            cont = self.prompt_input(c.lg + "Do you want to continue? [y/n]")
            if cont.lower() in ["n", "no"]:
                self.clear_screen()
                break


terminal = Terminal()
terminal.run_program()
